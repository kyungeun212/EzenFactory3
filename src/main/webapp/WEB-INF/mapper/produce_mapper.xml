<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="produce">
	
<!-- 	주문승인 -> orderwork_table에 insert  -->
	<insert id="addOrderworkInfo" parameterType="java.lang.String">
		<![CDATA[
			insert into orderwork_table(
						orderwork_idx,
						product_idx, 
						product_modelno, 
						order_regdate,
						order_deadline,
						order_exdate,
						order_cnt,
						order_unit,
						order_unit_price,
						order_amt,
						orderwork_date,
						orderwork_status)
						(
			select orderwork_seq.nextval,
			            product_idx, 
						product_modelno, 
						order_regdate,
						order_deadline,
						order_exdate,
						order_cnt,
						order_unit,
						order_unit_price,
						order_amt,
						to_char(sysdate, 'YYYYMMDD'),
						order_status
						from order_table 
						where order_idx= #{order_idx} and order_status='주문승인')
		]]>
	</insert>
	
<!-- 	작업지시서 -->
	<select id="getOrderworkList" resultType="produce.ProduceBean">
		<![CDATA[
			select orderwork_idx,
				   product_idx, 
				   product_modelno, 
				   order_regdate,
				   order_deadline,
				   order_exdate,
				   order_cnt,
				   order_unit,
				   order_unit_price,
				   order_amt,
				   orderwork_date,
				   orderwork_status
			from orderwork_table
			where orderwork_status = '주문승인'
		]]>
	</select>
	
	<!-- 	orderwork_table 작업지시명 update-->
	<update id="updateProcessName" parameterType="java.lang.String">
		<![CDATA[
			update orderwork_table set (select process_name from orderwork_table where orderwork_idx = #{orderwork_idx})
			where orderwork_idx=#{orderwork_idx}
		]]>
	</update>
	
<!-- 		작업지시서 작업요청 -> produce_table에 insert -->
		<insert id="addProduceInfo" parameterType="java.lang.String">
			<![CDATA[
				insert into produce_table (produce_idx, orderwork_idx, process_name, orderwork_date, product_idx, product_modelno,
										   order_regdate, order_deadline, order_exdate, order_cnt, order_unit, order_unit_price, order_amt, 
                                           produce_cnt, produce_losscnt, produce_badcnt,
                                           orderwork_status)
										select produce_seq.nextval, orderwork_idx, process_name, orderwork_date, product_idx, product_modelno, 
							               order_regdate, order_deadline, order_exdate, order_cnt, order_unit, order_unit_price, order_amt, 
                                           (SELECT trunc(DBMS_RANDOM.VALUE(
                                            (select order_cnt from orderwork_table where orderwork_idx = #{orderwork_idx}), (select order_cnt from orderwork_table where orderwork_idx = #{orderwork_idx})*1.1)
                                            ) as produce_cnt FROM DUAL),
                                            (SELECT trunc(DBMS_RANDOM.VALUE(
                                            0, (select order_cnt from orderwork_table where orderwork_idx = #{orderwork_idx})*0.01)
                                            ) as produce_losscnt FROM DUAL),
                                            (SELECT trunc(DBMS_RANDOM.VALUE(
                                            0, (select order_cnt from orderwork_table where orderwork_idx = #{orderwork_idx})*0.01)
                                            ) as produce_badcnt FROM DUAL),
                                           orderwork_status
										from orderwork_table
										where orderwork_idx = #{orderwork_idx}
			]]>
		</insert>
		
		<!-- produce_table의 생산율 계산-->
	<update id="updateProcessRate" parameterType="java.lang.String">
		<![CDATA[
			update produce_table set produce_processrate = produce_cnt/order_cnt * 100
			where orderwork_idx=#{orderwork_idx}
		]]>
	</update>
<!-- 	orderwork_table 작업상태 '주문승인' -> '생산진행'-->
	<update id="updateOrderworkStatus" parameterType="java.lang.String">
		<![CDATA[
			update orderwork_table set orderwork_status = '생산진행'
			where orderwork_idx=#{orderwork_idx}
		]]>
	</update>
	
	<select id="getProducestatusList" resultType="produce.ProduceBean">
		<![CDATA[
			select produce_idx,
				   orderwork_idx,
				   process_name,
				   orderwork_date,
				   product_idx,
				   product_modelno, 
				   order_regdate,
				   order_deadline,
				   order_exdate,
				   order_cnt,
				   order_unit,
				   order_unit_price,
				   order_amt,
				   produce_cnt,
				   produce_losscnt,
				   produce_badcnt,
				   produce_processrate,
				   orderwork_status
				from produce_table
		]]>
	</select>
<!-- 	produce_table 작업상태 '생산진행' -> '생산완료'-->
	<update id="updateProduceStatus" parameterType="produce.ProduceBean">
		<![CDATA[
			update produce_table set produce_cnt = #{produce_cnt}, produce_losscnt=#{produce_losscnt}, produce_badcnt=#{produce_badcnt}, 
									 produce_processrate=#{produce_processrate}, orderwork_status = '생산완료'
		]]>
	</update>
	
	<select id="getProduceContentCnt" resultType="java.lang.Integer">
		<![CDATA[
			select count(*) from produce_table
		]]>
	</select>
	
	<select id="getOrderworkContentCnt" resultType="java.lang.Integer">
		<![CDATA[
			select count(*) from orderwork_table where orderwork_status = '주문승인'
		]]>
	</select>

</mapper>